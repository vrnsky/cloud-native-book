name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: vrnsky/cloud-native-book
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: true
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v1
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: |
          mvn clean package -P integration -DskipTests
  package:
    name: Package and publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build]
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
      - name: Build container image
        run: |
          mvn spring-boot:build-image -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/$ {{ env.IMAGE_NAME }}:${{ env.VERSION }} -Dspring-boot.build-image.publish=true
    - name: OCI image vulnerability scanning
      uses: anchore/scan-action@v3 #1
      id: scan
      with:
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} #2
        fail-build: false #3
        severity-cutoff: high
        acs-report-enable: true
    - name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v1 #4
      if: success() || failure()
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
    - name: Log into container registry
      uses: docker/login-action@v1 #5
      with:
        registry: ${{ env.REGISTRY }} #6
        username: ${{ github.actor }} #7
        password: ${{ secrets.GITHUB_TOKEN }} #8
    - name: Publish container image #9
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
